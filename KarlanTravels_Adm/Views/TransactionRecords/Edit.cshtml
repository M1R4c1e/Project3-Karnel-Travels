@model KarlanTravels_Adm.Models.TransactionRecord

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TransactionRecord</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TransactionRecordId)

        <div class="form-group">
            @Html.LabelFor(model => model.TransactionTypeId, "TransactionTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DisplayFor(model => model.TransactionType.TransactionTypeName)
                @Html.HiddenFor(model => model.TransactionTypeId)*@
                @Html.DropDownList("TransactionTypeId", null, htmlAttributes: new { @class = "form-control" , @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.TransactionTypeId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.TourId, "TourId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DisplayFor(model => model.Tour.TourName)
                @Html.HiddenFor(model => model.TourId)*@
                @Html.DropDownList("TourId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TourId, "", new { @class = "text-danger" })
                <span class="text-danger">@TempData["TourWarning"]</span>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CustomerID, "CustomerID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DisplayFor(model => model.Customer.Username)
                @Html.HiddenFor(model => model.CustomerID)*@
                @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
            @Html.LabelFor(model => model.TransactionFee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">            
                @Html.EditorFor(model => model.TransactionFee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TransactionFee, "", new { @class = "text-danger" })
                <br />
            </div>
        </div>*@

        @Html.HiddenFor(model => model.TransactionFee)

        <div class="form-group">
            @Html.LabelFor(model => model.Paid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Paid)
                    @Html.ValidationMessageFor(model => model.Paid, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.RecordedTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span>YYYY-MM-DD hh:mm</span>
                    @Html.EditorFor(model => model.RecordedTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RecordedTime, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @Html.HiddenFor(model => model.RecordedTime)

        <div class="form-group">
            @Html.LabelFor(model => model.TransactionNote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransactionNote, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransactionNote, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Session["AdminRole"].ToString() == "Senior Manager")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Deleted)
                        @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
